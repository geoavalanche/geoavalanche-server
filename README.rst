*******************
GeoAvalanche Server
*******************

Development
===========

Project generation
------------------

It was generated by running the following Maven command:

.. code-block:: console
 
	cd geoavalanche-server
	mvn -B archetype:generate \
		-DarchetypeGroupId=org.apache.maven.archetypes \
		-DgroupId=org.geoavalanche \
		-DartifactId=src

Rename the artifact Id:

.. code-block:: console

	cd src
	vi pom.xml    

.. code-block:: xml

    <artifactId>geoavalanche-server</artifactId>

Remove the artifacts created by default from maven archetype:

.. code-block:: console

	cd src
	rm -rf main test

Generate the Extension module:

.. code-block:: console

    mvn -B archetype:generate \
		-DartifactId=extension \
		-DgroupId=org.geoavalanche \
		-Dname="GeoAvalanche extension" \
		-DmoduleName=extension \
		-DmoduleDescription="Extension module"

Add the packaging property to the mode *pom*:

.. code-block:: xml
 
     <packaging>pom</packaging>

Generate the Main module:

.. code-block:: console
 
    mvn -B archetype:generate \
		-DartifactId=main \
		-DgroupId=org.geoavalanche \
		-Dname="GeoAvalanche main" \
		-DmoduleName=main \
		-DmoduleDescription="Main module"

Add the packaging property to the mode *pom*:

.. code-block:: xml
 
    <packaging>pom</packaging>

Add WPS modules
---------------

All the Web Processing Services by GeoAvalanche are developed under the artifact ga-wps according to what is doing in the GeoServer project.

.. code-block:: console

    cd extension
    mvn -B archetype:generate \
		-DartifactId=ga-wps \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service parent" \
		-DmoduleName=ga-wps \
		-DmoduleDescription="GeoAvalanche WPS module"

Add the packaging property to the mode *pom*:

.. code-block:: xml
 
     <packaging>pom</packaging>

Remove the artifacts created by default from maven archetype:

.. code-block:: console

	cd ga-wps
	rm -rf src

Create the GeoAvalanche Avalanche Algorithms module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-algs
    mvn -B archetype:generate \
		-DartifactId=alg-avalanche \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Algorithms for avalanche" \
		-Dpackage=org.geoavalanche.alg.avalanche \
		-DmoduleName=alg-avalanche \
		-DmoduleDescription="GeoAvalanche Algorithms for avalanche"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>

Create the WPS GeoAvalanche crowdsourcing module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-wps
    mvn -B archetype:generate \
		-DartifactId=wps-crowd \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service for crowdsourcing" \
		-Dpackage=org.geoavalanche.wps.crowd \
		-DmoduleName=wps-crowd \
		-DmoduleDescription="GeoAvalanche WPS module for crowdsourcing"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>

Create the WPS GeoAvalanche slope module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-wps
    mvn -B archetype:generate \
		-DartifactId=wps-slope \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service for slopes" \
		-Dpackage=org.geoavalanche.wps.slope \
		-DmoduleName=wps-slope \
		-DmoduleDescription="GeoAvalanche WPS module for slopes"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>

Create the WPS GeoAvalanche aspect module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-wps
    mvn -B archetype:generate \
		-DartifactId=wps-aspect \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service for aspects" \
		-Dpackage=org.geoavalanche.wps.aspect \
		-DmoduleName=wps-aspect \
		-DmoduleDescription="GeoAvalanche WPS module for aspects"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>

Create the WPS GeoAvalanche curvature module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-wps
    mvn -B archetype:generate \
		-DartifactId=wps-curvature \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service for curvatures" \
		-Dpackage=org.geoavalanche.wps.curvature \
		-DmoduleName=wps-curvature \
		-DmoduleDescription="GeoAvalanche WPS module for curvatures"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>

Create the WPS GeoAvalanche ATEI module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-wps
    mvn -B archetype:generate \
		-DartifactId=wps-atei \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service for ATEI" \
		-Dpackage=org.geoavalanche.wps.atei \
		-DmoduleName=wps-atei \
		-DmoduleDescription="GeoAvalanche WPS module for ATEI"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>


Create the WPS GeoAvalanche snowpack module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-wps
    mvn -B archetype:generate \
		-DartifactId=wps-snowpack \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service for snowpack" \
		-Dpackage=org.geoavalanche.wps.snowpack \
		-DmoduleName=wps-snowpack \
		-DmoduleDescription="GeoAvalanche WPS module for snowpack"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>

Create the WPS GeoAvalanche dangerindex module
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: console

    cd ga-wps
    mvn -B archetype:generate \
		-DartifactId=wps-dangerindex \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Web Processing Service for Danger" \
		-Dpackage=org.geoavalanche.wps.dangerindex \
		-DmoduleName=wps-dangerindex \
		-DmoduleDescription="GeoAvalanche WPS module for Danger"

Add the packaging property to the mode *jar*:

.. code-block:: xml
 
    <packaging>jar</packaging>

Add modules to the build
^^^^^^^^^^^^^^^^^^^^^^^^

Add the following dependencies to the pom of **main** artifact:

.. code-block:: xml

    <!-- GEOAVALANCHE -->
    <dependency>
      <groupId>org.geoavalanche.extension</groupId>
      <artifactId>wps-crowd</artifactId>
      <version>${geoavalanche.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geoavalanche.extension</groupId>
      <artifactId>wps-slope</artifactId>
      <version>${geoavalanche.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geoavalanche.extension</groupId>
      <artifactId>wps-aspect</artifactId>
      <version>${geoavalanche.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geoavalanche.extension</groupId>
      <artifactId>wps-snowpack</artifactId>
      <version>${geoavalanche.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geoavalanche.extension</groupId>
      <artifactId>wps-dangerindex</artifactId>
      <version>${geoavalanche.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geoavalanche.extension</groupId>
      <artifactId>wps-atei</artifactId>
      <version>${geoavalanche.version}</version>
    </dependency>

Add Algorithm modules
---------------------

All the Algorithms by GeoAvalanche are developed under the artifact ga-algs according to what is doing in the GeoServer project.

.. code-block:: console

    cd extension
    mvn -B archetype:generate \
		-DartifactId=ga-algs \
		-DgroupId=org.geoavalanche.extension \
		-Dname="GeoAvalanche Algorithms parent" \
		-DmoduleName=ga-algs \
		-DmoduleDescription="GeoAvalanche Algorithms module"

Add the packaging property to the mode *pom*:

.. code-block:: xml
 
     <packaging>pom</packaging>

Remove the artifacts created by default from maven archetype:

.. code-block:: console

	cd ga-algs
	rm -rf src

How to build
------------

.. code-block:: console

    mvn clean install

How to test
-----------

Docker
^^^^^^

Install the `Docker Toolbox`_ 

.. _Docker Toolbox: https://www.docker.com/products/docker-toolbox

Set the shell environment:

.. code-block:: console

    eval $(docker-machine env default)

Start the docker machine:

.. code-block:: console

    docker-machine start default

Build the container image from where you have placed the dockerfile

.. code-block:: console

	docker build -t geoavalanche/geoavalanche-server .

Run the container with the built image:

.. code-block:: console

    docker run -p 8080:8080 -p 8888:8888 -d geoavalanche/geoavalanche-server

Open your browser at this `local address`_ :

.. _local address: http://DOCKER_HOST_IP:8080/geoavalanche

where the value of variable depends from your docker configuration:

.. code-block:: bash

    DOCKER_HOST_IP=$(docker-machine ip)

How to update the container with new artifact
"""""""""""""""""""""""""""""""""""""""""""""

Stop the running container:

.. code-block:: console

    docker ps
    docker stop $CONTAINER_ID

where *CONTAINER_ID* is the identifier of the geoavalanche running container

Remove the container:

.. code-block:: console

    docker rm $CONTAINER_ID

Build the container again.

Credits
=======

This application has been developed within the `MyGEOSS`_ project, which has received funding from the European Unionâ€™s Horizon 2020 research and innovation programme.

.. _MyGEOSS: http://digitalearthlab.jrc.ec.europa.eu/mygeoss/

.. image:: /assets/mygeoss_logo.png

.. image:: /assets/euc_logo.png

